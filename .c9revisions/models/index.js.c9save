{"ts":1342470851917,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1342643495091,"patch":[[{"diffs":[[1,"\nvar db = require('mongojs').connect('mongodb://babel:Cantone$e@staff.mongohq.com:10027/babel');\n\nvar saveImage = function(file, usr) {\n\n        var imagesCollection = db.collection('Images');\n        var Image = {};\n        Image.imageFileName = file;\n        Image.user = usr;\n        Image.date = new Date();\n        imagesCollection.save(Image);\n        \n    }\n\nexports.saveImage = saveImage;\n"]],"start1":0,"start2":0,"length1":0,"length2":397}]],"length":397,"saved":false}
{"contributors":[],"silentsave":false,"ts":1342664594320,"patch":[[{"diffs":[[1,"\nvar db = require('mongojs').connect('mongodb://babel:Cantone$e@staff.mongohq.com:10027/babel');\n\nvar saveImage = function(file, usr) {\n\n    var imagesCollection = db.collection('Images');\n    var Image = {};\n    Image.imageFileName = file;\n    Image.user = usr;\n    Image.date = new Date();\n    imagesCollection.save(Image);\n        \n    }\n\nexports.saveImage = saveImage;\n\nvar getImages = function() {\n        var imagesCollection = db.collection('Images');\n        //var count = imagesCollection.find().count();\n        //console.log(count);\n        //var randomnumber = Math.floor(Math.random()*count);\n        //console.log(randomnumber);\n        //this is inefficient because it requires mongo to skip many records.  also it doesn't take a parameter.\n        //var image = imagesCollection.find(); //.limit(-1).skip(randomnumber).next();\n        var images;\n        imagesCollection.find(function(err, docs) {\n            images = docs;\n            // docs is an array of all the documents in mycollection\n        });\n        \n        console.log(docs);\n\n        return images;\n\n    }\n\nexports.getImages = getImages;"]],"start1":0,"start2":0,"length1":0,"length2":1121}]],"length":1121,"saved":false}
{"contributors":[],"silentsave":false,"ts":1342664907783,"patch":[[{"diffs":[[0,"r images"],[1," = 0"],[0,";\n      "]],"start1":853,"start2":853,"length1":16,"length2":20},{"diffs":[[0,"ole.log("],[-1,"doc"],[1,"image"],[0,"s);\n\n   "]],"start1":1048,"start2":1048,"length1":19,"length2":21}]],"length":1127,"saved":false}
{"ts":1342665047807,"patch":[[{"diffs":[[0,"mages = "],[-1,"0"],[1,"function getCallback(callbackResult){\n            return callbackResult;\n            }"],[0,";\n      "]],"start1":856,"start2":856,"length1":17,"length2":102},{"diffs":[[0,"    "],[-1,"images = "],[1,"getCallback("],[0,"docs"],[1,")"],[0,";\n  "]],"start1":1012,"start2":1012,"length1":21,"length2":25}]],"length":1216,"saved":false}
{"ts":1342665139773,"patch":[[{"diffs":[[0,"er).next();\n"],[1,"\n"],[0,"        var "]],"start1":831,"start2":831,"length1":24,"length2":25},{"diffs":[[0,"s = "],[-1,"function getCallback(callbackResult){\n            return callbackResult;\n            };"],[1,"g "],[0,"\n   "]],"start1":861,"start2":861,"length1":95,"length2":10}]],"length":1132,"saved":false}
{"contributors":[],"silentsave":false,"ts":1342920586367,"patch":[[{"diffs":[[0,"ion() {\n        "],[-1,""],[0,""],[1,"\n        "],[0,"var imagesCollec"]],"start1":395,"start2":395,"length1":32,"length2":41},{"diffs":[[0,"es ="],[-1," g \n       "],[0," ima"]],"start1":869,"start2":869,"length1":19,"length2":8},{"diffs":[[0,") {\n"],[-1,"            getCallback(docs);\n"],[0,"    "]],"start1":914,"start2":914,"length1":39,"length2":8},{"diffs":[[0,"    "],[-1,"});\n        \n        console.log(images);\n\n        return images;\n\n    }\n\nexports.getImages = getImages;\nvar db = require('mongojs').connect('mongodb://babel:Cantone$e@staff.mongohq.com:10027/babel');\n\nvar saveImage = function(file, usr) {\n\n        var imagesCollection = db.collection('Images'"],[1,"    return docs;\n        }"],[0,");\n"],[1,"\n"],[0,"        "],[-1,"var Image = {};\n        Image.imageFileName = file;\n        Image.user = usr;\n        Image.date = new Date();\n        imagesCollection.save(Image);\n        "],[1,"return images;\n"],[0,"\n   "]],"start1":991,"start2":991,"length1":470,"length2":61},{"diffs":[[0,"exports."],[-1,"save"],[1,"get"],[0,"Image"],[1,"s"],[0," = "],[-1,"save"],[1,"get"],[0,"Image"],[1,"s"],[0,";"],[-1,"\n"]],"start1":1056,"start2":1056,"length1":31,"length2":30}]],"length":1086,"saved":false}
{"contributors":[],"silentsave":false,"ts":1343871249223,"patch":[[{"diffs":[[-1,"\n"],[0,"var db = req"]],"start1":0,"start2":0,"length1":13,"length2":12},{"diffs":[[0,"usr) {\n\n"],[1,"    "],[0,"    var "]],"start1":128,"start2":128,"length1":16,"length2":20},{"diffs":[[0,"('Images');\n"],[1,"    "],[0,"    var Imag"]],"start1":180,"start2":180,"length1":24,"length2":28},{"diffs":[[0,"e = {};\n    "],[1,"  "],[1,"  "],[0,"Image.imageF"]],"start1":208,"start2":208,"length1":24,"length2":28},{"diffs":[[0,"= file;\n"],[1,"    "],[0,"    Imag"]],"start1":244,"start2":244,"length1":16,"length2":20},{"diffs":[[0," = usr;\n"],[1,"    "],[0,"    Imag"]],"start1":270,"start2":270,"length1":16,"length2":20},{"diffs":[[0,"new Date();\n"],[1,"        Image.random = Math.random();\n    "],[0,"    imagesCo"]],"start1":299,"start2":299,"length1":24,"length2":66},{"diffs":[[0,"Image);\n"],[-1,"        "],[0,"\n    }\n\n"]],"start1":379,"start2":379,"length1":24,"length2":16},{"diffs":[[0,"Image;\n\n"],[1,"\n//exports.getImages = getImages;\n"],[0,"var getI"]],"start1":419,"start2":419,"length1":16,"length2":50},{"diffs":[[0,"unction("],[-1,") {\n        "],[1,"quantity, callback) {\n"],[0,"\n       "]],"start1":478,"start2":478,"length1":28,"length2":38},{"diffs":[[0,"    "],[-1,"//"],[0,"var "],[-1,"count = imagesCollection.find().count();\n        //console.log(count);\n        //var randomnumber = Math.floor(Math.random()*count);\n        //console.log(randomnumber);\n        //this is inefficient because it requires mongo to skip many records.  also it doesn't take a parameter.\n        //var i"],[1,"random = Math.random();\n\n        imagesCollection.find({\n            \"random\": {\n                $gt: random\n            }\n        }).limit(quantity, function(err, docs) {\n            if (docs.length < quantity) {\n                imagesCollection.find({\n                    \"random\": {\n                        $lte: random\n                    }\n                }).limit(quantity, function(err, moreDocs) {\n                    callback(err, moreDocs)\n                });\n            }\n            else {\n                callback(err, docs);\n            }\n        });\n\n    }\n\nexports.getI"],[0,"mage"],[1,"s"],[0," = "],[-1,"i"],[1,"getI"],[0,"mages"],[-1,"Collection.find(); //.limit(-1).skip(randomnumber).next();\n"],[1,";\n\n\nvar saveAudio = function(image, usr, audio, lang) {\n//{ $push : { field : value, field2 : value2 } }"],[0,"\n   "]],"start1":569,"start2":569,"length1":384,"length2":719},{"diffs":[[0," var"],[-1," images ="],[0," ima"]],"start1":1292,"start2":1292,"length1":17,"length2":8},{"diffs":[[0,"tion"],[-1,".find(function(err, docs) {\n            // docs is an array of all the documents in mycollection\n            return docs;\n        });\n\n        return images;\n\n    }\n\nexports.getImages = getImages"],[1," = db.collection('Images');\n        var Audio = {};\n        Audio.audioFileName = audio;\n        Audio.imageFileName = image;\n        Audio.user = usr;\n        Audio.audioLanguage = lang;\n        Audio.date = new Date();\n        imagesCollection.update({\n            imageFileName: image\n        }, { $push : {\n            audioFiles: [Audio]\n        }}, function(err) {\n            //the update is complete\n        });\n    }\n\nexports.saveAudio = saveAudio"],[0,";"]],"start1":1309,"start2":1309,"length1":200,"length2":461}]],"length":1770,"saved":false}
